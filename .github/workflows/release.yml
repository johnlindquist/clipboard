name: Build Executable

on:
  push:
    branches: [main, ci]

jobs:
  build_mac_executable_x64:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: go build executable
        run: |
          GOOS=darwin GOARCH=amd64 go build -v -o go-clipboard/binaries/go-clipboard-darwin-x64 ./go-clipboard/main.go
      - name: Make executable
        run: |
          chmod +x go-clipboard/binaries/go-clipboard-darwin-x64
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mac-artifact-x64
          retention-days: 5
          path: |
            go-clipboard/binaries/go-clipboard-darwin-x64

  build_mac_executable_arm64:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: Set up Xcode
        run: |
          sudo xcode-select --switch /Applications/Xcode.app
      - name: go build executable
        run: |
          export GOOS=darwin
          export GOARCH=arm64
          export CC=$(xcrun --sdk macosx --find clang)
          export CXX=$(xcrun --sdk macosx --find clang++)
          export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
          export CGO_ENABLED=1
          go build -v -o go-clipboard/binaries/go-clipboard-darwin-arm64 ./go-clipboard/main.go
      - name: Make executable
        run: |
          chmod +x go-clipboard/binaries/go-clipboard-darwin-arm64
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mac-artifact-arm64
          retention-days: 5
          path: |
            go-clipboard/binaries/go-clipboard-darwin-arm64

  build_windows_executable:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: go build executable
        run: |
          go build -v -o go-clipboard/binaries/go-clipboard-win32-x64 ./go-clipboard/main.go
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          retention-days: 5
          path: |
            go-clipboard/binaries/go-clipboard-win32-x64

  build_linux_executable:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: go build executable
        run: |
          go build -v -o go-clipboard/binaries/go-clipboard-linux-x64 ./go-clipboard/main.go
      - name: Make executable
        run: |
          chmod +x go-clipboard/binaries/go-clipboard-linux-x64
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifact
          retention-days: 5
          path: |
            go-clipboard/binaries/go-clipboard-linux-x64

  publish_release:
    needs: [build_windows_executable, build_linux_executable, build_mac_executable_x64, build_mac_executable_arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Install dependencies and run build
        run: |
          npm ci
          npm run build
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: mac-artifact-x64
          path: go-clipboard/binaries

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: mac-artifact-arm64
          path: go-clipboard/binaries
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-artifact
          path: go-clipboard/binaries
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-artifact
          path: go-clipboard/binaries

      - name: Semantic Release
        run: |
          npx semantic-release

      - name: Get version from package.json
        id: package_version
        run: |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package_version.outputs.version }}
          release_name: Release v${{ steps.package_version.outputs.version }}
          draft: false
          prerelease: false
      - name: Compress Package
        run: |
          npm pack
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "johnlindquist-clipboard-${{ steps.package_version.outputs.version }}.tgz"
          asset_name: "johnlindquist-clipboard-${{ steps.package_version.outputs.version }}.tgz"
          asset_content_type: application/gzip

      - name: Publish to NPM
        run: |
          npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
