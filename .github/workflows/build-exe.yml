name: Build Executable

on:
  push:
    branches: [main, ci]

jobs:
  build_mac_executable:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: go build executable
        run: |
          go build -v -o go-clipboard/binaries/go-clipboard-darwin-x64 ./go-clipboard/main.go
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mac-artifact
          retention-days: 5
          path: |
            go-clipboard/binaries/go-clipboard-darwin-x64

  build_windows_executable:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: go build executable
        run: |
          go build -v -o go-clipboard/binaries/go-clipboard-win32-x64 ./go-clipboard/main.go
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          retention-days: 5
          path: |
            go-clipboard/binaries/go-clipboard-win32-x64

  build_linux_executable:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: go build executable
        run: |
          go build -v -o go-clipboard/binaries/go-clipboard-linux-x64 ./go-clipboard/main.go
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifact
          retention-days: 5
          path: |
            go-clipboard/binaries/go-clipboard-linux-x64

  publish_release:
    needs: [build_mac_executable, build_windows_executable, build_linux_executable]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Install dependencies and run build
        run: |
          npm ci
          npm run build
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: mac-artifact
          path: go-clipboard/binaries
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-artifact
          path: go-clipboard/binaries
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-artifact
          path: go-clipboard/binaries
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Compress Package
        run: |
          npm run pack
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: clipboard-release.tar.gz
          asset_name: clipboard-release.tar.gz
          asset_content_type: application/gzip
